management:
  endpoints:
    web:
      base-path: /author # 使用这个方式修改监控上下文
eureka:
  instance:
    health-check-url-path: ${management.endpoints.web.base-path}/health
    status-page-url-path: ${management.endpoints.web.base-path}/info # 相对路径配置
    # status-page-url: 这个是绝对路径配置的方式
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8080/eureka
    region: local
    availability-zones:
      local: defaultZone
    prefer-same-zone-eureka: true # 如果是 true 那么通过region 找到对应 zone 并通过zone 找到对应url进行注册 ，并且不会继续注册到其他注册中心并维护心跳  如果是false 那么注册到serviceUrl第一个上 ，并且 不会继续往下注册 并且维护心跳
spring:
  application:
    name: girl
  jpa:
    hibernate:
      ddl-auto: update # 数据库的操作模式
    show-sql: false # 是否在控制台打印SQL语句
    properties:
      hibernate:
        default_schema: public
        temp:
          use_jdbc_metadata_defaults: false
  aop:
    auto: true
    proxy-target-class: true # 默认设置为false,使用的是标准Java动态代理的实现（接口），而不是cglib（类）
  datasource:
    sql-script-encoding: utf-8 # 解决中文乱码
    url: jdbc:postgresql://127.0.0.1:5432/TEST_SPRING_CLOUD?currentSchema=public
    username: xupp
    password: pass
    driver-class-name: org.postgresql.Driver
    maxActive: 200
    initialSize: 10
    minIdle: 10
    maxWait: 60000
    testWhileIdle: true
    removeAbandoned: true
    removeAbandonedTimeout: 180
    logAbandoned: false
    minEvictableIdleTimeMillis: 60000
    timeBetweenEvictionRunsMillis: 60000
    testOnBorrow: false
    #validationQuery: select 1 from dual
    validationQuery: select version();
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 200
    #monitor: true # 是否启用数据库连接池监控，开启后损失部分性能
    #filters: stat,wall,log4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
server:
  port: 8086

